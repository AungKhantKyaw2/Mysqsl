=>EVENT 

=EVENT TYPE (Schedule)

(i) ONE TIME EVENT
(ii) Recurring EVENT

=>Check event ON/officestaffs
SHOW PROCESSLIST;


SET GLOBAL event_scheduler = ON;
SET GLOBAL event_scheduler = OFF;

----------------------------------------------

=>(i) ONE TIME EVENT
=>Syntax

=>Method11

CREATE EVENT eventname
ON SCHEDULE AT TIMESTAMP
DO 
statements;

=>Method 2
CREATE EVENT eventname
ON SCHEDULE AT TIMESTAMP
ON COMPLETION PRESERVE
DO 
statements;

=>(ii) Recurring EVENT

=>Method1 1
CREATE EVENT eventname
ON SCHEDULE AT TIMESTAMP
STARTS TIMESTAMP
DO 
statements;


=>Method 2
CREATE EVENT eventname
ON SCHEDULE AT TIMESTAMP
STARTS TIMESTAMP
ENDS TIMESTAMP
DO 
statements;

-----------------------------------------

=>EXERCISE

=>(i) ONE TIME EVENT

CREATE TABLE IF NOT EXISTS vipusers(
 id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 name VARCHAR(50) NOT NULL,
 email VARCHAR(50) NOT NULL UNIQUE,
 emailverify INT
);

DESC vipusers;
SHOW CREATE TABLE vipusers;
SHOW INEX FROM vipusers;

INSERT INTO vipuser(name,email,emailverify)
VALUES('aung aung','aungaung@gmail.com',1),
('kyaw kyaw','kyawkyaw@gmail.com',1),
('tun tun','tuntun@gmail.com',1),
('maung maung','maungmaung@gmail.com',1),
('zaw zaw','zawzaw@gmail.com',1);


INSERT INTO vipusers(name,email)
VALUES('su su','susu@gmail.com'),
('yu yu','yuyu@gmail.com'),
('nu nu','nunu@gmail.com'),
('myint myint','myintmyint@gmail.com'),
('po po','popo@gmail.com');
SELECT * FROM vipusers;


DELETE FROM vipusers WHERE emailverify IS NULL;

=>(i) ONE TIME EVENT MEthod 1
CREATE EVENT vipusers_ev
ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 30 SECOND
DO 
DELETE FROM vipusers WHERE emailverify IS NULL;

=>LIST event_scheduler
SHOW EVENTS;

-----------------------------------------

=>(i) ONE TIME EVENT METHOD 2
CREATE EVENT eventname
ON SCHEDULE AT TIMESTAMP
ON COMPLETION PRESERVE
DO 
statements;


CREATE EVENT vipusers_ev
ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 30 SECOND
ON COMPLETION PRESERVE
DO 
DELETE FROM vipusers WHERE emailverify IS NULL;

=>LIST event_scheduler
SHOW EVENTS;

SELECT * FROM vipusers;

=>DROP EVENT
DROP EVENT IF EXISTS vipusers_ev;

----------------------------------------

=>(ii) Recurring EVENT

CREATE TABLE IF NOT EXISTS dailaywifipasswords(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    password VARCHAR(8) NOT NULL UNIQUE,
    status INT DEFAULT 1

);

DESC daily wifipasswords;
SHOW CREATE TABLE dailaywifipasswords;
SHOW INDEX FROM dailaywifipasswords;


INSERT INTO dailaywifipasswords(password,status)
VALUES('1111',2),
('2222',2),
('3333',2),
('4444',2),
('5555',1);

SELECT * FROM dailaywifipasswords;
UPDATE dailaywifipasswords SET status =2
WHERE status =1;

=>Method1 1
CREATE EVENT dailaywifipasswords_ev
ON SCHEDULE EVERY 1 DAY
STARTS "2024-1-27 16:00:00"
DO 
UPDATE dailaywifipasswords SET status =2
WHERE status =1;


SHOW EVENTS;

SELECT * FROM dailaywifipasswords;


=>Method 2
INSERT INTO dailaywifipasswords(password,status)
VALUES('6666',2);


SELECT * FROM dailaywifipasswords;

CREATE EVENT dailaywifipasswordswithend_ev
ON SCHEDULE EVERY 2 DAY
STARTS "2025-1-27 17:54:00"
ENDS  "2025-1-27 17:55:00"
DO 
UPDATE dailaywifipasswords SET status =2
WHERE status =1 
LIMIT 1;


SHOW EVENTS;

SELECT * FROM dailaywifipasswords;


FOR multiple statements

DELIMITER //
CREATE EVENT dailaywifipasswordswithend_ev
ON SCHEDULE EVERY 2 DAY
STARTS '2025-01-27 16:23:00'
ENDS '2025-01-27 16:24:30'
DO 
BEGIN
    UPDATE dailaywifipasswords SET status = 1 WHERE status =2;
    UPDATE dailaywifipasswords SET status = 3 WHERE status = 1;
END;
//
DELIMITER ;

