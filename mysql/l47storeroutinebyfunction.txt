=> Stored Routines 
(i) PROCEDURE (we can call stored procedure)
   (a) IN = Input parameters  
   (b) OUT = Output Parameters 
    (c) INOUT = Inout Parameters

 (ii) function
     (a) Builtin function
     (b) User Define function
          (i) Input Parameters(function can be with Parameters or Without Parameters / function always return only 1 value)

      --------------------------------------------------------------------------------
=>  (b) User Define function


SELECT * FROM products;
SELECT * FROM checkouts;

SELECT products.name,products.price,checkouts.qty,(products.name*checkouts.qty) AS total amount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id;


=>Grand total
SELECT SUM(products.price * checkouts.qty) AS total amount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id;

DELIMITER //
    CREATE FUNCTION totalamount_fun()
    RETURNS DECIMAL DETERMINISTIC
    BEGIN 
        DECLARE result DECIMAL;
        SELECT SUM(products.price * checkouts.qty) INTO result
        FROM checkouts
        LEFT JOIN products
        ON checkouts.product_id = products.id;
        RETURN result;
    END; //
  

DELIMITER ;


=>Show Functions
SHOW FUNCTION STATUS WHERE DB ="sqlclass";

SELECT totalamount_fun();

=>Drop function
DROP FUNCTION IF EXISTS totalamount_fun;
-----------------------------------------------------------
With parameters (single)


SELECT products.name,products.price,checkouts.qty,(products.name*checkouts.qty) AS totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id
WHERE products.id =2;


DELIMITER //
      CREATE FUNCTION totalamountbyproductid_fun(p_productid INT)
    RETURNS DECIMAL DETERMINISTIC
    BEGIN 
        DECLARE totalamount DECIMAL;
        SELECT SUM(products.price * checkouts.qty) INTO totalamount
        FROM checkouts
        LEFT JOIN products
        ON checkouts.product_id = products.id
        WHERE products.id= p_productid;    
        RETURN totalamount;
   END;//
DELIMITER ;


SHOW FUNCTION STATUS WHERE DB ="sqlclass";

*error
totalamountbyproductid_fun();

SELECT totalamountbyproductid_fun(1);

SELECT totalamountbyproductid_fun(2);

SELECT totalamountbyproductid_fun(3);

------------------------------------------------------
With parameters (Multi)
=>Grand total by product_id with paymenttype

SELECT products.name,products.price,checkouts.qty,(products.price*checkouts.qty) AS totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id
WHERE products.id =1 AND checkouts.payment= "COD";


DELIMITER //
      CREATE FUNCTION totalamountbypayment_fun(p_productid INT,p_payment VARCHAR(5))
    RETURNS DECIMAL DETERMINISTIC
    BEGIN 
        DECLARE totalamount DECIMAL;
       SELECT SUM(products.price*checkouts.qty) INTO totalamount
        FROM checkouts
        LEFT JOIN products
        ON checkouts.product_id = products.id
        WHERE products.id =p_productid AND checkouts.payment= p_payment;
        RETURN totalamount;
   END;//
DELIMITER ;


SHOW FUNCTION STATUS WHERE DB ="sqlclass";

*error
totalamountbypayment_fun();

SELECT totalamountbypayment_fun(1,'COD');

SELECT totalamountbypayment_fun(1,'VISA');

SELECT totalamountbypayment_fun(1,'MPU');

-----------------------------------------------------


