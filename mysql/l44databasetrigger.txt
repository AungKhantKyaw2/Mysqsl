=>Database TRIGGER

=>TRIGGER TIME 
BEFORE 
AFTER

=>TRIGGER EVENT
INSERT
UPDATE 
DELETE 

TRIGGER EVENT      OLD    New
INSERT             No      yes
UPDATE             yes     yes
DELETE             yes      no

=>Syntax
DELIMITER $$
   CREATE TRIGGER triggername
   trigger_time trigger_event ON table FOR EACH row
   BEGIN
   -------------statement;
   END $$

DELIMITER ;

* don'tabe2
DELIMITER;
*do
DELIMITER ;

=> Statement (IF THEN ELSE)

IF condition1 THEN
  code to be excuted
ELSEIF condition2 THEN 
   code to be excuted
ELSEIF condition3 THEN 
   code to be excuted
ELSE 
   code to be excuted

END IF;

--------------------------------------------------------

=>EXERCISE 

CREATE TABLE IF NOT EXISTS borrowers(
   id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
   username VARCHAR(50),
   password VARCHAR(255),
   age INT,
   status INT DEFAULT 1
);

DESC borrowers;
SHOW CREATE TABLE borrowers;
SHOW INDEX FROM borrowers;

INSERT INTO borrowers(username,password,age)
VALUES('aung aung',MD5(SHA('123456')),20),
('zaw zaw',MD5(SHA('123456')),30),
('kyaw kyaw',MD5(SHA('123456')),40),
('tun tun',MD5(SHA('123456')),35),
('zayar',MD5(SHA('123456')),25);

SELECT * FROM borrowers;


INSERT INTO borrowers(username,password,age)
VALUES('su su',MD5(SHA('123456')),15),
('yu yu',MD5(SHA('123456')),16),
('nu nu',MD5(SHA('123456')),19),
('ni ni',MD5(SHA('123456')),16),
('war war',MD5(SHA('123456')),13);

SELECT * FROM borrowers;

----------------------------------------------------------------

=>BEFORE INSERT 

DELIMITER //
CREATE TRIGGER borrowerstatus_bfc
BEFORE INSERT 
ON borrowers FOR EACH ROW 
BEGIN 
     IF NEW.age <18 THEN SET NEW.status =2;
     ELSEIF NEW.age >60 THEN SET NEW.status =3;
     END IF;

END; //

DELIMITER ;

SHOW TRIGGERS;

INSERT INTO borrowers(username,password,age)
VALUES('su su',MD5(SHA('123456')),15),
('yu yu',MD5(SHA('123456')),18),
('nu nu',MD5(SHA('123456')),20),
('ni ni',MD5(SHA('123456')),35),
('war war',MD5(SHA('123456')),65);

SELECT * FROM borrowers;

DROP TRIGGER IF EXISTS borrowerstatus_bfc;
SHOW TRIGGERS;

INSERT INTO borrowers(username,password,age)
VALUES('yan yan',MD5(SHA('123456')),17),
('kyaw moe',MD5(SHA('123456')),75);


SELECT * FROM borrowers;

---------------------------------------------------

=>Mysql ERROR Message


DELIMITER //

CREATE TRIGGER borrowersstatuserr_bfc
BEFORE INSERT
ON borrowers FOR EACH ROW
BEGIN 
    IF NEW.age < 18 THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "Ohh... We cannot provide loan for this user.";
    END IF; 
END; //

DELIMITER ;
SHOW TRIGGERS ;

INSERT INTO borrowers(username,password,age)
VALUES('yan yan',MD5(SHA('123456')),20),
('kyaw moe',MD5(SHA('123456')),65);

SELECT * FROM borrowers;

INSERT INTO borrowers(username,password,age)
VALUES('thuzar',MD5(SHA('123456')),16);

-------------------------------
AFTER INSERT

CREATE TABLE IF NOT EXISTS borrowerscreators(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    borrower_id INT;
    created_by VARCHAR(50),
    created_at TIMESTAMP DEFAULT NOW()

);

DESC borrowerscreators;
SHOW CREATE TABLE borrowerscreators;
SHOW INDEX FROM borrowerscreators;

DELIMITER //
CREATE TRIGGER borrowerscreators_afc
AFTER INSERT 
ON borrowers FOR EACH ROW 
BEGIN 
   DECLARE dbuser VARCHAR(50);
   SELECT USER() INTO dbuser;
     INSERT INTO borrowerscreators(borrower_id,created_by)
     VALUE(NEW.id,dbuser);
END; //

DELIMITER ;

SHOW TRIGGERS;

INSERT INTO borrowers(username,password,age)
VALUE('muyar',MD5(SHA('123456')),35);
SELECT * FROM borrowers;
SELECT * FROM borrowercreators;


INSERT INTO borrowers(username,password,age)
VALUE('muyar',MD5(SHA('123456')),60),
('someone',MD5(SHA('123456')),35);
SELECT * FROM borrowers;
SELECT * FROM borrowercreators;

------------------------------------------------

=>AFTER INSERT 
CREATE TABLE IF NOT EXISTS remindmessages(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    borrower_id INT 
    message VARCHAR(255) NOT NULL

);

DESC remindmessages;
SHOW CREATE TABLE remindmessages;
SHOW INDEX FROM remindmessages;

INSERT INTO remindmessages(borrower_id,message)
VALUE();


DELIMITER //

CREATE TRIGGER borrowersagereminder_afc
AFTER INSERT
ON borrowers 
FOR EACH ROW 
BEGIN
    IF NEW.age IS NULL THEN
        INSERT INTO remindmessages (borrower_id, message)
        VALUES (NEW.id, CONCAT("Dear ", NEW.username, ", please update your age"));
    END IF;
END;
//

DELIMITER ;



SELECT * FROM borrowers;
SELECT * FROM borrowerscreators;
SHOW TRIGGER;



INSERT INTO borrowers(username,password)
VALUE('muyar1',MD5(SHA('123456')));
INSERT INTO borrowers(username,password)
VALUE('chanchan',MD5(SHA('123456')));

INSERT INTO borrowers(username,password)
VALUE('kyi pyar',MD5(SHA('123456'))),
('pyae pyae',MD5(SHA('123456')));
SELECT * FROM borrowers;
SELECTT * FROM borrowerscreators;
SELECTT * FROM remindmessages;


----------------------------------------------------

=>BEFORE UPDATE

DELIMITER ||
CREATE TRIGGER borrowersage_bfu
BEFOR UPDATE
ON borrowers FOR EACH ROW
   
BEGIN
   DECLARE errmessage VARCHAR(255);
   SET errmessage=CONCAT('THE old age is',OLD.age,'.SOrry we cannot provide to change');
   IF OLD.age IS NOT NULL THEN
   SIGNAL SQLSTATE'45000'
   SET MESSAGE_TEXT =errmessage;
   ELSE
        IF NEW.age < 18 THEN 
        SET NEW.status =2;
        ELSEIF NEW.age >60 THEN
        SET NEW.status =3;
        END IF;
   END IF;
END; ||

DELIMITER ;

SHOW TRIGGERS;
SELECT * FROM borrowers;
SELECTT * FROM borrowerscreators;
SELECTT * FROM remindmessages;

*error
UPDATE borrowers SET age =20 WHERE id =16; 
UPDATE borrowers SET age =50 WHERE id=3;

UPDATE borrowers SET age =13 WHERE id =26;
UPDATE borrowers SET age =65 WHERE id =27;
SELECT * FROM borrowers;

--------------------------------------------------------
=>AFTER UPDATE

DELIMITER ||
CREATE TRIGGER borrowersagereminder_afu
AFTER UPDATE
ON borrowers FOR EACH ROW
BEGIN 
        DELETE FROM remindmessages WHERE borrower_id=OLD.id;
END; ||

DELIMITER ; 

SHOW TRIGGERS;

UPDATE borrowers SET age =40 WHERE id =29;

SELECT * FROM borrowers;
SELECT * FROM remindmessages;

-------------------------------------------------------------------


=>BEFORE DELETE

CREATE TABLE IF NOT EXISTS borrowersremovers(
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  borrower_id INT,
  created_by VARCHAR(50),
  created_at TIMESTAMP DEFAULT NOW()
);

DESC borrowersremovers;
SHOW CREATE TABLE borrowersremovers;
SHOW INDEX FROM borrowersremovers;



DELIMITER $$
CREATE TRIGGER IF NOT EXISTS borrowersremovers_bfd
BEFORE DELETE
ON borrowers FOR EACH ROW 
BEGIN 
      DECLARE dbuser VARCHAR(50);
      SELECT USER() INTO dbuser;
      INSERT INTO borrowersremovers(borrower_id,created_by)
      VALUE(old.id,dbuser);
END; $$


DELIMITER ;

SHOW TRIGGERS;


SELECT * FROM borrowers;
SELECT * FROM borrowersremovers;

DELETE FROM borrowers WHERE id =1;

SELECT * FROM borrowers;
SELECT * FROM borrowersremovers;

-------------------------------------------------

=>AFTER DELETE

DELIMITER $$

CREATE TRIGGER borrowersrmcreators_afd
AFTER DELETE
ON borrowers FOR EACH ROW
BEGIN
    DELETE FROM borrowerscreators WHERE borrower_id = OLD.id; 
END; $$
DELIMITER;
SHOW TRIGGER;

DELETE FROM borrowers WHERE id =20;
DELETE FROM borrowers WHERE id =23;

DELETE FROM borrowers WHERE id =24;
SELECT * FROM borrowers;
SELECT * FROM borrowers;
SELECT * FROM borrowersremovers;
