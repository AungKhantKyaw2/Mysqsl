=>String Data Types

Data Types                            DESCIPTION
BIT(size)                            A bit-value type, from 1 to 64,  default value  is 1
BOOL                                Zero is considered as false, non-zero values are considered as true
BOOLEAN                           

TINYINT(size)                         A very small integer, signed range -128 to 127 , Unsigned range 0 to 255
SMALLINT(Size)                        A  small integer, signed range -32768 to 32367 , Unsigned range 0 to 65555(6kb)
MEDIUMINT(size)                       A  small integer, signed range -8388608 to 8388607  Unsigned range 0 to 16777215(16mb)
INT                                   A  small integer, signed range -2147483648 to 2147483647 Unsigned range 0 to 4294967295(4gb)
INTEGER                               A  small integer, signed range -2147483648 to 2147483647 Unsigned range 0 to 4294967295(4gb)
BIGINT()                              A  large Integer

DECIMAL(size,d)                       fixed-point number, default value for d is 0
                                      eg(999.99) is digit and decimal(5,2) 
DEC(size,d)                           fixed-point number, default value for d is 0


FLOAT(size,p)                     A floating point number(Approximation Value)
FLOAT(p)                          A floating point number(Approximation Value)
DOUBLE(size,p)                    A floating point number(Approximation Value) , p is optional 0 to 24
                                   A floating point number(Approximation Value) , p is optional 25 to 53

Note = DECIMAL for finance (such as money)
            FLOAT & DOUBLE for science app
--------------------------------------------------------------------------------

item price
rebull 1700

=>EXERCISE

CREATE TABLE IF NOT EXISTS items(
        name VARCHAR(20),
        Price INT,
        status BOOL
);

DESC items;
SHOW CREATE TABLE items;

INSERT INTO items(name,price)
VALUES ('water',100),
       ('coffee',500),
       ('cake',800),
       ('snack',250.56),
       ('jam',100.34);
     
SELECT * from items;
INSERT INTO items(name,price,status)
VALUES ('water',100,0),
       ('coffee',500,1),
       ('cake',800,0),
       ('snack',250.56,1),
       ('jam',100.34,0);
SELECT * from items;     

CREATE TABLE IF NOT EXISTS proitems(
        name VARCHAR(20),
        purchaseprice INT(4) SIGNED,
        sellprice INT(4) UNSIGNED
 );

DESC proitems;
SHOW CREATE TABLE proitems;


INSERT INTO proitems(name,purchaseprice,sellprice)
VALUES ('water',9000.95,10000),
       ('coffee',-100,200),
       ('cake',800,100),
       ('snack',-250.56,350.77),
       ('jam',-1000,2000);

       SELECT * from items;     

INSERT INTO proitems (name, purchaseprice, sellprice)
VALUES 
    ('water', 9000.95, -200),


    SELECT * FROM proitems;
    -----------------------------------------------------
                                   number data type
                                int      fixed-point floating-point
                                integer  decimal

DECIMAL(5,2)
egl(999.99) is 5 digits and 2 decimal digit

DECIMAL(5,3) = 20.324
               20.5 =20.500
              20.52354897 = 20.524 (warning);


CREATE TABLE IF NOT EXISTS sellitems(
            name VARCHAR(20),
            Price DECIMAL(6,2)
);

DESC sellitems;
SHOW CREATE TABLE sellitems;

*result= 100.43
INSERT INTO sellitems(name,price)
VALUES('coffee',100.43);

*result =1000.1
INSERT INTO sellitems(name,price)
VALUES('redbull',1000.01);

*result =1000.99
INSERT INTO sellitems(name,price)
VALUES('redbull',1000.99);

*result =1001.00
INSERT INTO sellitems(name,price)
VALUES('redbull',1000.9959);

*result =1001.00
INSERT INTO sellitems(name,price)
VALUES('redbull',1000.9858);

SELECT * FROM sellitems;

*result =1000.99
INSERT INTO sellitems(name,price)
VALUES('deedo',1000);

*error
INSERT INTO sellitems(name,price)
VALUES('deedo',100000);

SELECT * FROM sellitems;

-----------------------------------------
FLOAT()  VS DOUBLE()

CREATE TABLE IF NOT EXISTS shoppings(
            name VARCHAR(20),
            purchaseprice FLOAT,
            sellprice FLOAT(4)

);

DESC shoppings;
SHOW CREATE TABLE shoppings;


INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('redbull',100,100),
('sponeser',500,500.34),
('joey',800,800.56),
('deedo',250,250.889),
('cake','9000',10000);

SELECT * FROM shoppings;


*result = 112233     112233
INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('birdnest',112233,112233.45);


*result = 11223300
INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('water',11223344.45,11223344.45);



*result = 1122330000
INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('water',1122334455.45,1122334455.45);

SELECT * FROM shoppings;


----------------------------------------------

CREATE TABLE IF NOT EXISTS buyings(
            name VARCHAR(20),
            purchaseprice FLOAT,
            sellprice DOBULE

);

DESC buyings;
SHOW CREATE TABLE buyings;


INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('redbull',100,100),
('sponeser',500,500.34),
('joey',800,800.56),
('deedo',250,250.889),
('cake','9000',10000);

SELECT * FROM buyings;


*result = 112233 112233.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('birdnest',112233,112233.45);


*result = 11223300 11223344.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('water',11223344.45,11223344.45);



*result = 1122330000    1122334455.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('water',1122334455.45,1122334455.45);


*result = 11223300 11223344.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('water',112233445566778899.45,112233445566778899.45);


SELECT * FROM buyings;
--------------------------------------------

=>e/E 
HTML input number type 'e/E' but e stand for exponential (exponent) which is a symbol
Eg . 200000 can be written as 2e5 (3e4 = 3x10^4 =30000)

#